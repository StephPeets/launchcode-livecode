@model CodingEvents.ViewModels.AddEventViewModel

<h1>Add Event</h1>

<!-- Since we don't provide a location in our method, it will POST to itself -->
<!-- Adding the asp-controller and asp-action to the form allows us -->
<form method="post">
    <div asp-controller="Events" asp-action="NewEvent" class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" />
        <!-- This element will only be created if there's a validation error with the ErrorMessage -->
        <span asp-validation-for="Name"></span>
    </div>
    <div asp-controller="Events" asp-action="NewEvent" class="form-group">
        <label asp-for="Description"></label>
        <input asp-for="Description" />
        <!-- This element will only be created if there's a validation error with the ErrorMessage -->
        <span asp-validation-for="Description"></span>
    </div>
    <div asp-controller="Events" asp-action="NewEvent" class="form-group">
        <label asp-for="ContactEmail"></label>
        <input asp-for="ContactEmail" />
        <!-- This element will only be created if there's a validation error with the ErrorMessage -->
        <span asp-validation-for="ContactEmail"></span>
    </div>
    <div class="form-group">
        <!-- Our categories -->
        <label asp-for="CategoryId">Event Category</label>
        <select asp-for="CategoryId" asp-items="Model.Categories"></select>
    </div>
    <input type="submit" value="Add Event" />
</form>
